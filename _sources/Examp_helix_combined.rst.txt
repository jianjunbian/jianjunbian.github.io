Dislocation helix with a loop
======================================

.. image:: img/helix_with_loop.png
   :width: 80% 
   :align: center 

--------

To create a dislocation helix combined with a loop, 

**Step 1:**

  Use the tool in subdirectory :doc:`tools/Bcc <Tools>` to creat a BCC crystal sample: ``bcc_reg.lmp``, use the shell script in subdirectory :doc:`tool/Helical_surface <Tools>` to create the mesh of a helical surface: ``mesh.dat``;

**Step 2:**

  Open terminal, run the following command:

.. code-block:: Shell 
   :linenos:

   CryDisGen para_file bcc_reg.lmp

--------

.. admonition:: Parameter file

   Content of the :doc:`para_file <ParaFile>`:


.. code-block:: CryDisGen
   :linenos:

   #those starting with '#' are comment lines
   #crystal region
   Region
   -x      1 -1  0      # lattice orientation in x-direction
   -y      1  1 -2      # lattice orientation in y-direction
   -z      1  1  1      # lattice orientation in z-direction
   -lat    2.867        # lattice constant of Fe
   -pbc    1  1  1      # boundary condition flag: '1': pbc, '0': non-pbc 

   nHelix  1
   Helix
   -bvh    1  1  1
   -bsh    1/2
   -f      mesh.dat

   #dislcoation
   nLoop    1           # number of dislocaito loop
   Loopn                # label of a loop section
   -bv     1  1  1      # orientation of Burgers vector
   -bs    -1/2          # scalar coefficient of Burgers vector, e.g., 1/2 in: 1/2<110>
   -dnorm  1 -1  0      # normal direction of the plane with dislocation loop
   -dc     0  25 0      # center of dislocation loop
   -dr     25           # radius of dislocaiton loop of half of the edge of square loop
   -lx     1  1 -2      # local x axis on the dislocation plane 
   -ly     1  1  1      # local y axis on the dislocation plane 
   -ndisl  4  2.4       # segments/vertices of a discretized dislocation loop and a scaling factor

.. important::
   In this example, the parameter tag ‘-ndisl’ accepts two arguments. When only a single argument is specified, the resulting dislocation loop assumes a square geometry. If a second argument is provided, it serves as a scaling factor for the loop edge oriented along the direction defined by the ‘-ly’ tag, thereby enabling the generation of rectangular loop configuration.
